/*объявления для hash.c*/

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>

/*массив размеров хэш-таблицы для рехеширования*/
static const size_t h_sizes[] = {53, 113, 293};
/*индекс на текущий размер хеш-таблицы*/
static size_t i_hash = 0;

/*структура элемента хэш-таблицы*/
typedef struct hash {
    char *word;
    size_t count;
} h_item_t;
/*хеш-таблица*/
typedef h_item_t ** hash_t;

/* операция:    создание элемента хеш-таблицы
 * предусловия: str - строка для копирования в элемент
 * постусловия: возвращает адрес элемента или
 *              NULL при ошибке выделения памяти*/
static h_item_t *create_item_hash(const char *str);

/* операция:    рехеширование
 * предусловия: должна быть создана хеш-таблица с
 *              помощью функции create_hash()
 *              old_htab - старая хеш-таблица
 * постусловия: возвращает новую хеш-таблицу, либо
 *              NULL при ошибке
 *              при удачном создании и наполнении новой
 *              таблицы, функция удаляет старую*/
static hash_t re_hash(hash_t old_htab);

/* операция:    вычисление хеш
 * предусловия: str - строка для вычисления хеш
 * постусловия: возвращает хеш*/
static uint32_t hashly(const char *str);
