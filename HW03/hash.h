/***********************************
 * Публичный интерфейс хеш-таблицы *
 **********************************/

/*элемент хеш-таблицы*/
typedef struct hash h_item_t;
/*хеш-таблица*/
typedef h_item_t ** hash_t;

/* операция:    создание и инициализация хеш-таблицы
 * предусловия: не принимает аргументов
 *              пользователем вызывается только один раз
 * постусловия: возвращает хеш-таблицу с элементами
 *              инициализированными NULL, либо NULL,
 *              если не удалось выделить память под таблицу*/
hash_t create_hash(void);

/* операция:    добавление элемента в хеш-таблицу
 * предусловия: должна быть создана хеш-таблица с
 *              помощью функции create_hash()
 *              str - строка для вычисления хеш
 *              htab - хеш-таблица
 * постусловия: возвращает хеш-таблицу или NULL при ошибке
 *              в этом случае таблица удаляется*/
hash_t add_hash(const char *str, hash_t htab);

/* операция:    вывод элементов хеш-таблицы
 * предусловия: должна быть создана хеш-таблица с
 *              помощью функции create_hash()
 *              htab - хеш-таблица
 * постусловия: возвращает число выведенных элементов*/
size_t print_hash(hash_t htab);

/* операция:    удаление хеш-таблицы
 * предусловия: должна быть создана хеш-таблица с
 *              помощью функции create_hash()
 *              htab - хеш-таблица
 * постусловия: ничего не возвращает*/
void del_hash(hash_t htab);
